generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id
  email    String
  verified Boolean @default(false)

  firstName      String?
  lastName       String?
  patronymic     String?
  birthDate      String?
  pasport        String?
  issued         String?
  departmentCode String?
  dateOfIssue    String?
  adress         String?
  snils          String?
  inn            String?
  phoneNumber    String?

  appointments Appointment[]
  conclusions  MedicalConclusion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Doctor {
  id                  String @id @default(uuid())
  email               String
  firstName           String
  lastName            String
  patronymic          String
  startTime           String
  endTime             String
  breakTime           String
  appointmentDuration String

  appointments Appointment[]
  conclusions  MedicalConclusion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MedicalConclusion {
  id          String @id @default(uuid())
  complaints  String
  anamnesis   String
  od          Float
  os          Float
  eyelids     String
  conjunctiva String
  cornea      String
  frontCam    String
  lacrimal    String
  iris        String
  pupil       String
  lens        String
  vitreous    String

  user     User   @relation(fields: [userId], references: [id])
  userId   String
  Doctor   Doctor @relation(fields: [doctorId], references: [id])
  doctorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id   String @id @default(uuid())
  date String
  time String

  Doctor   Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId String
  User     User   @relation(fields: [userId], references: [id])
  userId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
